@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client
@using Share.Model
@inject NavigationManager Navigation
@inject WebClient WebClient
@implements IAsyncDisposable

<PageTitle>Chat</PageTitle>

<div class="form-group">
    <label>
        User:
        <input @bind="userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50" />
    </label>
</div>
<button @onclick="Send" disabled="@(WebClient.Connection?.State != HubConnectionState.Connected)">Send</button>

<hr>

<ul id="messagesList">
    @foreach (Message M in WebClient.MessageList)
    {
        <li>@M.Sender @M.Content @M.Timestamp</li>
    }
</ul>

@code {
    private List<string> messages = [];
    private string? userInput;

    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        WebClient.OnMessageReceived += UpdateMessageList;
        await WebClient.StartConnection();
    }

    private void UpdateMessageList()
    {
        InvokeAsync(StateHasChanged);
    }

    private async Task Send()
    {
        if (messageInput != null)
        {
            Message M = new(WebClient.Username, messageInput, DateTime.Now);
            await WebClient.SendMessage(M);
            messageInput = "";
        }
    }

    public async ValueTask DisposeAsync()
    {
        WebClient.OnMessageReceived -= UpdateMessageList;
    }
}
